"""fresh start

Revision ID: 7f936237f8f9
Revises: 
Create Date: 2025-02-19 17:12:34.465299

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7f936237f8f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('confirmation_files',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('gcs_file_id', sa.String(length=255), nullable=True),
    sa.Column('extracted_text', sa.Text(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_name', 'file_path', 'gcs_file_id', name='unique_file_identifier')
    )
    op.create_table('party_codes',
    sa.Column('party_code_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('party_code', sa.String(length=100), nullable=False),
    sa.Column('msger_name', sa.String(length=255), nullable=True),
    sa.Column('msger_address', sa.Text(), nullable=True),
    sa.Column('party_name', sa.String(length=255), nullable=False),
    sa.Column('party_role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('party_code_id'),
    sa.UniqueConstraint('msger_name', 'party_name', 'party_role', name='unique_party_combination'),
    sa.UniqueConstraint('party_code', name='unique_party_code')
    )
    op.create_table('parsing_results',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('confirmation_file_id', sa.UUID(), nullable=False),
    sa.Column('parsed_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('latest', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['confirmation_file_id'], ['confirmation_files.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('unique_latest_parsing_result', 'parsing_results', ['confirmation_file_id'], unique=True, postgresql_where=sa.text('latest'))
    op.create_table('matching_units',
    sa.Column('matching_unit_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('parsing_result_id', sa.UUID(), nullable=False),
    sa.Column('extracted_transactions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parsing_result_id'], ['parsing_results.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('matching_unit_id')
    )
    op.create_table('matching_relationships',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('matching_unit_1', sa.UUID(), nullable=False),
    sa.Column('matching_unit_2', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['matching_unit_1'], ['matching_units.matching_unit_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['matching_unit_2'], ['matching_units.matching_unit_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matching_unit_1', 'matching_unit_2', name='unique_matching_relationship')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matching_relationships')
    op.drop_table('matching_units')
    op.drop_index('unique_latest_parsing_result', table_name='parsing_results', postgresql_where=sa.text('latest'))
    op.drop_table('parsing_results')
    op.drop_table('party_codes')
    op.drop_table('confirmation_files')
    # ### end Alembic commands ###
